AWSTemplateFormatVersion: "2010-09-09" Description: CloudFormation template to create a private S3 bucket and a CloudFront distribution Resources: # S3 Bucket for the project NewProjectS3Bucket: Type: "AWS::S3::Bucket" Properties: BucketName: !Sub "${AWS::StackName}-bucket" PublicAccessBlockConfiguration: BlockPublicAcls: true BlockPublicPolicy: true IgnorePublicAcls: true RestrictPublicBuckets: true # CloudFront Origin Access Identity (Moved before S3 Bucket Policy) CloudFrontOriginAccessIdentity: Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
Properties: CloudFrontOriginAccessIdentityConfig: Comment: "Access Identity for CloudFront to access the S3 bucket" # S3 Bucket Policy to allow access via CloudFront OAI S3BucketPolicy: Type: "AWS::S3::BucketPolicy" Properties: Bucket: !Ref NewProjectS3Bucket PolicyDocument: Version: "2012-10-17" Statement: - Sid: AllowCloudFrontAccess Effect: Allow Principal: AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity.Id}" Action: "s3:GetObject" Resource: !Sub "arn:aws:s3:::${NewProjectS3Bucket}/*" # CloudFront Distribution CloudFrontDistribution: Type: "AWS::CloudFront::Distribution" Properties: DistributionConfig:
Enabled: true DefaultRootObject: "index.html" Origins: - Id: S3Origin DomainName: !GetAtt NewProjectS3Bucket.RegionalDomainName S3OriginConfig: OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}" DefaultCacheBehavior: TargetOriginId: S3Origin ViewerProtocolPolicy: "redirect-to-https" AllowedMethods: - GET - HEAD CachedMethods: - GET - HEAD Compress: true ForwardedValues: QueryString: false Cookies: Forward: "none" ViewerCertificate: CloudFrontDefaultCertificate: true PriceClass: "PriceClass_100"
Outputs: NewS3BucketName: Description: Name of the new S3 bucket Value: !Ref NewProjectS3Bucket CloudFrontDistributionDomainName: Description: Domain name of the CloudFront distribution Value: !GetAtt CloudFrontDistribution.DomainName